generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  name        String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  authId      String?      @db.VarChar(255)
  enrollments Enrollment[]
  reviews     Review[]
  submissions Submission[]
  courses     Course[]     @relation("UserCourses")
}

model Author {
  id           Int      @id @default(autoincrement())
  name         String
  image        String?
  totalReviews Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  email        String?  @db.VarChar
  courses      Course[] @relation("AuthorCourses")
}

model Course {
  id          Int          @id @default(autoincrement())
  title       String
  description String?
  categoryId  Int
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  authorId    Int
  image       String?
  assignments Assignment[]
  author      Author       @relation("AuthorCourses", fields: [authorId], references: [id])
  category    Category     @relation(fields: [categoryId], references: [id])
  enrollments Enrollment[]
  lessons     Lesson[]
  reviews     Review[]
  users       User[]       @relation("UserCourses")
}

model Enrollment {
  id            Int      @id @default(autoincrement())
  userId        Int
  courseId      Int
  createdAt     DateTime @default(now())
  paymentmethod String?  @db.VarChar
  paymentstate  String?  @db.VarChar
  course        Course   @relation(fields: [courseId], references: [id])
  user          User     @relation(fields: [userId], references: [id])
}

model Lesson {
  id             Int          @id @default(autoincrement())
  title          String
  content        String
  courseId       Int
  attachmentpath String?
  attachments    Json
  updatedAt      DateTime     @updatedAt
  videopath      String?
  videourl       String
  createdAt      DateTime     @default(now())
  assignments    Json?        @default("[]")
  Assignment     Assignment[]
  course         Course       @relation(fields: [courseId], references: [id])
}

model Assignment {
  id          Int          @id @default(autoincrement())
  title       String
  courseId    Int
  createdAt   DateTime     @default(now())
  lessonId    Int?
  assignments Json?        @default("[]")
  course      Course       @relation(fields: [courseId], references: [id])
  Lesson      Lesson?      @relation(fields: [lessonId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_lesson")
  submission  Submission[]
}

model Category {
  id      Int      @id @default(autoincrement())
  name    String
  courses Course[]
}

model Review {
  id       Int    @id @default(autoincrement())
  content  String
  rating   Int
  userId   Int
  courseId Int
  course   Course @relation(fields: [courseId], references: [id])
  user     User   @relation(fields: [userId], references: [id])
}

model Submission {
  id           Int        @id @default(autoincrement())
  content      Json
  assignmentId Int
  userId       Int
  createdAt    DateTime   @default(now())
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  user         User       @relation(fields: [userId], references: [id])
}
